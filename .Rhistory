a
available.packages()
head(rownames(a), 3)
a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages(c("slidify", "ggplot2", "devtools"))
source("http://bioconductor.org/biocLite.R")
BiocLite(c("GenomicFeatures", "AnnotationDbi"))
biocLite(c("GenomicFeatures", "AnnotationDbi"))
q()
head(rownames(a), 3) ## Show the anmes of the first few packages
install.packages("slidify")
install.packages(c("slidify", "ggplot2", "devtools"))
install.packages("slidify")
chooseCRANmirror()
install.packages("slidify")
q()
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite()
biocLit(c("Genomic Features", "Annotation Dbi"))
biocLite(c("Genomic Features", "Annotation Dbi"))
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
x <-c(1,3,5)
y <-c(3,2,10)
rbind((x,y))
rbind(x,y)
x <-list(2,"a","b",TRUE)
x[[2]]
x <-1:4
y <-2:3
x+y
x<-c(3,5,1,10,12,6)
x[x %in% 1:5]<-0
x[X>0]<-6
x<-c(3,5,1,10,12,6)
x[X>0]<-6
x[x==0]<-6
x<-c(3,5,1,10,12,6)
x[x!=6]<-0
dim(hw1_data.csv)
load(hw1_data.csv)
hw1_data <- read.csv("C:/Users/David/Desktop/Data Scientist Specialization Certificate/R-programming/hw1_data.csv")
View(hw1_data)
read.csv(hw1_data)
subset(x,1:2)
help subset()
help("subset")
x[subsetx,<=2]
bar <- subset(foo, location <= 2)
hw1_data[c(1,2)]
hw1_data[c(1, 2),]
hw1_data[c(152, 153),]
hw1_data[c(47),]
sapply(hw1_data, function(x) sum(is.na(x)))
x<-hw1_data
x
x<-x[!is.na(x)]
result<-colMeans(x)
colmeans(x)
colMeans(x, na.rm = FALSE)
colMeans(x)
x<-hw1_data
colMeans(x, na.rm = TRUE, dims = 1L)
names(x)
x.sub1(x, Ozone > 31 & Temp > 90)
x.sub1<-subset(x, Ozone > 31 & Temp > 90)
colMeans(x.sub1, na.rm = TRUE, dims = 1L)
x.sub2<-subset(x, Month == 6)
colMeans(x.sub2, na.rm = TRUE, dims = 1L)
x.sub3<-subset(x, Month == 5)
x.sub3
y<-c(3,5,1,10,126)
y<-c(3,5,1,10,12,6)
y[y!=6]<-0
y
y<-c(3,5,1,10,12,6)
y[y %in% 1:5]<-0
y
x <- as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-01"))
unclass(as.Date("1970-01-02"))
X<-Sys.time()
x
p<-as.POSIXlt(x)
names(unclass(p))
p$sec
source('~/.active-rstudio-document')
cube(3)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z <- 10
f(3)
source('~/.active-rstudio-document')
y
View(hw1_data)
View(hw1_data)
View(x.sub1)
View(x.sub2)
View(x.sub2)
View(x.sub3)
View(x.sub3)
View(x.sub3)
swirl()
load(swirl)
install.packages("swirl")
load(swirl)
swirl()
load(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
install_from_swirl(Exploratory Data Analysis)
install_from_swirl("Exploratory Data Analysis")
swirl()
sample(colors())
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette(c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
pal(seq(0,1,len=6))
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
p2(2)
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue","green"),alpha=0.5)
p3(5)
plot(x,y,print(pch=19),col=(rgb(0,.5,.5)))
plot(x,y,pch=19,col=(rgb(0,.5,.5)))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(p1(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg),aes=drv
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv),geom=(c("point","smooth"))
qplot(displ,hwy,data=mpg,color=drv,geom=(c("point","smooth"))
)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
plot(drv,hwy,data=mpg,geom="boxplot")
plot(split=drv,hwy,data=mpg,geom="boxplot")
skip()
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(count=hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,ethod="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
library(method)
install.packages(ggplot2)
exit
skip()
swirl()
install.packages(ggplot2)
install.packages(ggplot)
install.packages(gpplot1)
install.packages(gpplot2)
install.packages("gpplot2")
library(ggplot2)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
next()
info()
skip()
swirl()
skiP()
skip
skip()
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year()
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989-05-17")
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1-9-2012")
ymd("1920/1/2")
dt1
hmd_hms(dt1)
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update()
update(this_moment)
update("this_moment", date)
update(this_moment, exact = TRUE)
skip()
this_moment
nyc <- now()
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz("Asia/Hong_Kong")
skip()
arrive
skip()
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
library(reshape2)
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
train <- cbind(trainSubjects, trainActivities, train)
library(reshape2)
downloadFile <- "data/getdata_dataset.zip"
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
if(!file.exists("./data")) { dir.create("./data")}
if(!file.exists(downloadFile)) {download.file(downloadURL, downloadFile, method = "curl"); unzip(downloadFile, overwrite = T, exdir = ".")}
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
setwd("C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment")
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
library(reshape2)
downloadFile <- "data/getdata_dataset.zip"
downloadURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
trainXFile <- "./data/UCI HAR Dataset/train/X_train.txt"
trainLabels <- "./data/UCI HAR Dataset/train/y_train.txt"
trainSubjectFile <- ".data/UCI HAR Dataset/train/subject_train.txt"
testXFile <- "./data/UCI HAR Dataset/test/X_test.txt"
testLabels <- "./data/UCI HAR Dataset/test/y_test.txt"
testSubjectFile <- ".data/UCI HAR Dataset/test/subject_test.txt"
if(!file.exists("./data")) { dir.create("./data")}
if(!file.exists(downloadFile)) {download.file(downloadURL, downloadFile, method = "curl"); unzip(downloadFile, overwrite = T, exdir = ".")}
activityLabels <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
packages<-c("data.table", "dplyr", "reshape2")
sapply(packages, require, character.only = TRUE)
getdata<-function(fileUrl, dir, filename, ext){dirName<-paste(dir, sep = "")
if(!file.exists(dirName)){
dir.create(path = dirName)
}
dest<-paste("./", dirName,"/", filename, ext, sep = "")
if(!file.exists(dest)){
download.file(url = fileUrl, destfile = dest,
method = "curl")
datedownloaded<-date()
}
dest
}
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
temp<-getdata(fileUrl = fileURL, dir = "Fitness",
filename = "data", ext = ".zip")
alldata<-unzip(zipfile = temp)
alldata
source('~/.active-rstudio-document')
packages<-c("data.table", "dplyr", "reshape2")
sapply(packages, require, character.only = TRUE)
packages <- c("data.table", "dplyr", "reshape2")
sapply(packages, require, character.only = TRUE)
getdata <- function(fileUrl, dir, filename, ext) {}
getdata <- function(fileUrl, dir, filename, ext) {
dirName <- paste(dir, sep = "")
if(!file.exists(dirName)){
dir.create(path = dirName)
}
dest <- paste("./", dirName, "/", filename, ext, sep = "")
if(!file.exists(dest)){
download.file(url = fileUrl, destfile = dest, method = "curl")
datedownloaded <- date()
}
dest
}
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
temp <- getdata(fileUrl = fileURL, dir = "Fitness", filename = "data", ext = ".zip")
unzip("getdata-projectfiles-UCI HAR Dataset.zip")
XTest<- read.table("UCI HAR Dataset/test/X_test.txt")
YTest<- read.table("UCI HAR Dataset/test/Y_test.txt")
SubjectTest <-read.table("UCI HAR Dataset/test/subject_test.txt")
XTrain<- read.table("UCI HAR Dataset/train/X_train.txt")
YTrain<- read.table("UCI HAR Dataset/train/Y_train.txt")
SubjectTrain <-read.table("UCI HAR Dataset/train/subject_train.txt")
features<-read.table("UCI HAR Dataset/features.txt")
activity<-read.table("UCI HAR Dataset/activity_labels.txt")
X<-rbind(XTest, XTrain)
Y<-rbind(YTest, YTrain)
Subject<-rbind(SubjectTest, SubjectTrain)
dim(X)
dim(Y)
dim(Subject)
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
length(index)
X<-X[,index]
dim(X)
Y[,1]<-activity[Y[,1],2]
head(Y)
names<-features[index,2]
names(X)<-names
names(Subject)<-"SubjectID"
names(Y)<-"Activity"
CleanedData<-cbind(Subject, Y, X)
head(CleanedData[,c(1:4)])
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID,Activity']
dim(TidyData)
write.table(TidyData, file = "Tidy.txt", row.names = FALSE)
head(TidyData[order(SubjectID)][,c(1:4), with = FALSE],12)
source('C:/Users/David/Desktop/Getting-and-Cleaning-Data-Assingment/run_analysis.R')
swirl()
load(swirl)
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
swirl()
load(swirl)
swirl()
load(swirl)
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("fields")
swirl()
